plugins{
    id 'java'
    id 'dev.architectury.loom' version '1.7.+' apply false //Forge loom :D
    id "architectury-plugin" version "3.4.+" apply false
    id "com.github.johnrengelman.shadow" version "8.1.1" apply false
    //id "com.dorongold.task-tree" version "1.5" Current version doesn't support gradle 6.8

    id 'com.matthewprenger.cursegradle' version '1.4.0' apply false
    id "com.github.breadmoirai.github-release" version "2.4.1"
    id "com.modrinth.minotaur" version "2.8.7" apply false
}


allprojects {

    group = rootProject.maven_group

    repositories {
        maven{
            name = "TerraformersMC maven"
            url = 'https://maven.terraformersmc.com/'
        }
        maven {
            name "KosmX's maven"
            url 'https://maven.kosmx.dev/'
        }
        maven {
            url "https://libraries.minecraft.net"
        }
        mavenLocal()
    }

    tasks.withType(JavaCompile).configureEach {

        //apply plugin: "architectury-plugin"

        def targetVersion = project.java_version
        sourceCompatibility = JavaVersion.toVersion(targetVersion)
        targetCompatibility = JavaVersion.toVersion(targetVersion)

        //options.compilerArgs << '-Xlint:unchecked'
        //options.deprecation = true	//deprecated warning on compile
        repositories {
            mavenCentral()
        }
        dependencies {
            // put common dependencies here
            compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
        }
    }

    compileJava.options.encoding = 'UTF-8'
    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
    }

}

//Build all modules task :D
tasks.register('buildAll') {
    dependsOn(':bukkit:build')
    dependsOn(':bungee:build')
    dependsOn(':velocity:build')
    dependsOn(':minecraft:buildAll')
}

tasks.register('cleanupArtifacts') {
    doLast {
        delete "${project.projectDir}/artifacts"
    }
}

tasks.register('collectArtifacts') {
    dependsOn('cleanupArtifacts')
    dependsOn(':bukkit:copyArtifacts')
    dependsOn(':bungee:copyArtifacts')
    dependsOn(':velocity:copyArtifacts')
    dependsOn('minecraft:copyArtifacts')
//    doLast {
//        releaseArtifacts = project.getProjectDir().toPath().resolve("artifacts").toFile().listFiles()
//    }
}

clean {
    delete "${project.projectDir}/artifacts"
}

